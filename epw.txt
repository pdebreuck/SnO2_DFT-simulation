script python
=>save
2/ dossier epw a cot√© de phonon
3/ dans epw SNO2.in scf.in scf nscf
4/ SCF: 
smearing = 'np' (petit => augmenter point k (666 ok) + degauss, tot_charge = 0.01 
5/ nscf: shifter k (uniquement positif) 1/6 ... conv_tresh = 10d-12
nband = 28
6/ EPW: iverbosiry: 0 Tnk 3 Tnvnue (par phonon)/fishstick: borne enrgie outour fermi.
degausk = 0.1(en peu plus haut q'avant)

filkf: un point k gamma
nqf1: converngence la dessus
point q au bout (x cartesian puis points)
nbnd = 13
numiter 3000
wanier (frozen: point ou il doit passer)
linewidth

-----

Script cr√©e dossier save et copie colle dossiers en les renommant pour √™tre utilis√©s par EPW
0/ Phonon EPW
1/ Lancer script Python:  Python pp.py
2/ Cr√©er dossier PhononEPW (scf.in, ph.in) et EPW (+epw.in, scf.in, nscf.in)
	- scf = m√™me que phononEPW + occupation ‚Äòsmearing‚Äô/smearing = ‚Äòmp‚Äô = type de smearing, degauss (largeur de fermi-dirac) =1meV =0.001 petit plus pr√©cis /tot_charge =0.01
		nband = 28 au moins pour inclure bande de conduction
	- nscf = m√™me que scf
		Pour que k soit positifs (dans EPW) - shift zone de brilloin 
		Sp√©cifier 6*6*6 = 216, specifier tous les points k 0 1/6 2/6
		conv_thr = 1.0d-12
		nband = 28 au moins pour inclure bande de conduction
3/ input EPW
	dvscf_dir ../ph/save
	iverbosity = 0 -> tau_nk
			 = 3 ->tau_nk\mu = donne en fonction des modes de phonons
	elecselfen = .true. -> calcule sigma pour tau
	phononselfen = .false.
	a2f = 
	parallel k = true (q false) 
	fsthick =  1eV üòä intervalle raisonnable de scattering consid√©r√©)
	eptemp = 300K
	degaussw = 0.02 (un peu plus) que pour scf (calcul moins pr√©cis mais plus smooth (?)
	fermi_energy = (voir output nscf) 

	nk = 6
	nq = 3
	filukk = ‚Äò‚Äô		(fichier s√©par√©1 seul point k) 

	nqf1 = 3 puis convergence l√†-dessus 12*12*12 24 36 (points sur lesquels on prend l‚Äôinterpolation) 
	√† la fin 
	wannierize true 
	nombre de bandes wannierisees (13)
	nombre skipper
	niter pour minimiser extension spatiale wannier
	dis-win_min = 0.8 (display bandes 
	dis_win_
	dis_froz = window sur laquelle wannier  passe par points calcul√©s 
	proj = fonctions initiales donn√©es pour wannier, typiquement orbitales mol√©culaires hybrid√©es

	8 cartesian 
	Liste de points q donn√©e par phonon
	line width
